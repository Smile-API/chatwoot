version: '3.8'

services:
  chatwoot_app:
    image: chatwoot/chatwoot:v3.9.0
    command: sh -c "bundle exec rails db:chatwoot_prepare && bundle exec rails s -p 3000 -b 0.0.0.0"
    entrypoint: docker/entrypoints/rails.sh
    volumes:
      - chatwoot_data:/app/storage
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      INSTALLATION_NAME: SmileAPI
      NODE_ENV: production
      RAILS_ENV: production
      INSTALLATION_ENV: docker
      FRONTEND_URL: http://0.0.0.0:3000
      SECRET_KEY_BASE: 5cb0891cc762d906e27db5b507c7825b
      WHATSAPP_CLOUD_BASE_URL: https://api.smileapi.com.br/v1/edupoli
      DEFAULT_LOCALE: pt_BR
      FORCE_SSL: "false"
      ENABLE_ACCOUNT_SIGNUP: "true"
      REDIS_URL: redis://redis:6379
      REDIS_PASSWORD: ""
      # Servidor de Email Gmail
      MAILER_SENDER_EMAIL: Chatwoot <eduardopolicarpo@gmail.com>
      SMTP_DOMAIN: gmail.com
      SMTP_ADDRESS: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USERNAME: eduardopolicarpo@gmail.com
      SMTP_PASSWORD: "123456"
      SMTP_AUTHENTICATION: login
      SMTP_ENABLE_STARTTLS_AUTO: "true"
      SMTP_OPENSSL_VERIFY_MODE: peer
      MAILER_INBOUND_EMAIL_DOMAIN: eduardopolicarpo@gmail.com
      # Banco de dados
      POSTGRES_HOST: postgres
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: chatwoot
      # Armazenamento
      ACTIVE_STORAGE_SERVICE: local
      # logs
      RAILS_LOG_TO_STDOUT: "true"
      LOG_LEVEL: "info"
      LOG_SIZE: "500"
      RAILS_MAX_THREADS: "5"
      # Avatar Bot
      USE_INBOX_AVATAR_FOR_BOT: "true"
      # Mobile App IDs
      IOS_APP_ID: "L7YLMN4634.com.chatwoot.app"
      ANDROID_BUNDLE_ID: "com.chatwoot.app"
      # Android Certificate
      ANDROID_SHA256_CERT_FINGERPRINT: "AC:73:8E:DE:EB:56:EA:CC:10:87:02:A7:65:37:7B:38:D4:5D:D4:53:F8:3B:FB:D3:C6:28:64:1D:AA:08:1E:D8"
      # Push Relay
      ENABLE_PUSH_RELAY_SERVER: "true"

  chatwoot_worker:
    image: chatwoot/chatwoot:v3.9.0
    command: bundle exec sidekiq
    entrypoint: docker/entrypoints/rails.sh
    volumes:
      - chatwoot_data:/app/storage
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      INSTALLATION_NAME: SmileAPI
      NODE_ENV: production
      RAILS_ENV: production
      INSTALLATION_ENV: docker
      FRONTEND_URL: http://0.0.0.0:3000
      SECRET_KEY_BASE: 5cb0891cc762d906e27db5b507c7825b
      WHATSAPP_CLOUD_BASE_URL: https://api.smileapi.com.br/v1/edupoli
      DEFAULT_LOCALE: pt_BR
      FORCE_SSL: "false"
      ENABLE_ACCOUNT_SIGNUP: "true"
      REDIS_URL: redis://redis:6379
      REDIS_PASSWORD: ""
      # Servidor de Email Gmail
      MAILER_SENDER_EMAIL: Chatwoot <eduardopolicarpo@gmail.com>
      SMTP_DOMAIN: gmail.com
      SMTP_ADDRESS: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USERNAME: eduardopolicarpo@gmail.com
      SMTP_PASSWORD: "123456"
      SMTP_AUTHENTICATION: login
      SMTP_ENABLE_STARTTLS_AUTO: "true"
      SMTP_OPENSSL_VERIFY_MODE: peer
      MAILER_INBOUND_EMAIL_DOMAIN: eduardopolicarpo@gmail.com
      # Banco de dados
      POSTGRES_HOST: postgres
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: chatwoot
      # Armazenamento
      ACTIVE_STORAGE_SERVICE: local
      # logs
      RAILS_LOG_TO_STDOUT: "true"
      LOG_LEVEL: "info"
      LOG_SIZE: "500"
      RAILS_MAX_THREADS: "5"
      # Avatar Bot
      USE_INBOX_AVATAR_FOR_BOT: "true"
      # Mobile App IDs
      IOS_APP_ID: "L7YLMN4634.com.chatwoot.app"
      ANDROID_BUNDLE_ID: "com.chatwoot.app"
      # Android Certificate
      ANDROID_SHA256_CERT_FINGERPRINT: "AC:73:8E:DE:EB:56:EA:CC:10:87:02:A7:65:37:7B:38:D4:5D:D4:53:F8:3B:FB:D3:C6:28:64:1D:AA:08:1E:D8"
      # Push Relay
      ENABLE_PUSH_RELAY_SERVER: "true"

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chatwoot
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  chatwoot_data:
  redis_data:
  postgres_data:

networks:
  default:
    driver: bridge
